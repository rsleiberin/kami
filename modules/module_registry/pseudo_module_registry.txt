modules/module_registry/module_registry.py

Define the ModuleRegistry class
Maintain a registry of all available modules
Provide methods to add, remove, and fetch modules
Handle exceptions and errors related to module operations

Class ModuleRegistry:

    Initialize:
        Create an empty dictionary for modules

    Method register_module(module_name, module_instance):
        If module_name is already in modules:
            Return an error message indicating the module is already registered
        Else:
            Add the module_instance to the modules dictionary with the key as module_name
            Return a success message indicating the module was registered

    Method remove_module(module_name):
        If module_name is not in modules:
            Return an error message indicating the module is not found
        Else:
            Remove the module_name from the modules dictionary
            Return a success message indicating the module was removed

    Method get_registered_modules():
        Return a list of all module names currently in the modules dictionary

    Method execute_module_method(module_name, method_name, *args, **kwargs):
        If module_name is not in modules:
            Return an error message indicating the module is not found
        Else:
            Get the module_instance from the modules dictionary using module_name
            If method_name is not a method of module_instance:
                Return an error message indicating the method is not found
            Else:
                Execute the method_name of the module_instance with given args and kwargs
                Return the result of the method execution

    Method get_module_methods(module_name):
        If module_name is not in modules:
            Return an error message indicating the module is not found
        Else:
            Get the module_instance from the modules dictionary using module_name
            Use the get_methods utility function to get a list of methods of the module_instance
            Return the list of methods

End of Class